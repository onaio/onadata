FROM onaio/python-deps:3.10.14 as base

ARG release_version=v4.0.1
ARG optional_packages

# Silence configuration prompts
ENV DEBIAN_FRONTEND noninteractive

ENV PYTHONUNBUFFERED 1

ENV DJANGO_SETTINGS_MODULE onadata.settings.docker

USER root

RUN mkdir -p /root/.ssh && ssh-keyscan github.com >> /root/.ssh/known_hosts

RUN mkdir -p /srv/onadata \
    && chown -R appuser:appuser /srv/onadata

COPY ../../ /srv/onadata/

# Install service requirements
WORKDIR /srv/onadata

# hadolint ignore=DL3013
RUN --mount=type=ssh if [ -n "$optional_packages" ]; then /home/appuser/.pyenv/versions/3.10.14/bin/pip install --no-cache-dir ${optional_packages} ; fi
RUN chown -R appuser:appuser /home/appuser/.pyenv

USER appuser

# hadolint ignore=DL3013
RUN python -m pip install --no-cache-dir -U pip && \
    python -m pip install --no-cache-dir -r requirements/base.pip && \
    python -m pip install --no-cache-dir -r requirements/s3.pip && \
    python -m pip install --no-cache-dir -r requirements/ses.pip && \
    python -m pip install --no-cache-dir -r requirements/azure.pip && \
    python -m pip install --no-cache-dir pyyaml==6.0.1 uwsgitop==0.12 supervisor==4.2.5

FROM base as docs

ENV PYENV_ROOT="$HOME/.pyenv"
ENV PATH $PYENV_ROOT/versions/3.10.14/bin:$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH
COPY --from=base /home/appuser/.pyenv/ /home/appuser/.pyenv/
COPY --from=base /srv/onadata/ /srv/onadata/

USER root

RUN chown -R appuser:appuser /srv/onadata/

USER appuser

# install sphinx and build API docs.
RUN python -m pip install --no-cache-dir -r requirements/docs.pip && \
    make -C docs html


FROM ubuntu:jammy-20240405 as runtime

ENV DEBIAN_FRONTEND noninteractive

# Install prerequisite packages
RUN apt-get update -q && \
    apt-get install -y --no-install-recommends locales netcat

# # Generate and set en_US.UTF-8 locale
RUN locale-gen en_US.UTF-8
ENV LC_ALL en_US.UTF-8
ENV LC_CTYPE en_US.UTF-8
RUN dpkg-reconfigure locales


# # Install OnaData Dependencies
RUN apt-get install -y --no-install-recommends \
    gdal-bin \
    git-core \
    openjdk-11-jre-headless \
    libxml2-dev \
    libxslt1-dev \
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*

# Create OnaData user and add to tty group
RUN useradd -G tty -m onadata \
    && mkdir -p /srv/onadata \
    && chown -R onadata:onadata /srv/onadata

COPY --from=base /home/appuser/.pyenv/ /home/onadata/.pyenv/
COPY --from=docs /srv/onadata/ /srv/onadata/
COPY --from=base /usr/local/lib/ /usr/lib/

RUN chown -R onadata:onadata /srv/onadata /home/onadata/.pyenv

USER onadata
WORKDIR /srv/onadata

ENV HOME /home/onadata
ENV PYTHON_VERSION 3.10.14
ENV PYENV_ROOT="$HOME/.pyenv"
ENV PATH $PYENV_ROOT/versions/3.10.14/bin:$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH

CMD ["uwsgi", "--ini", "uwsgi.ini"]

name: CI
on:
  - push
  - pull_request
concurrency:
  group: ci-${{ github.ref }}-${{ github.sha }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  github-action-ci:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - testfolder: "onadata/libs onadata/apps/main onadata/apps/restservice onadata/apps/sms_support onadata/apps/viewer onadata/apps/messaging"
          - testfolder: "onadata/apps/api onadata/apps/logger"
    services:
      postgres:
        image: postgis/postgis:13-3.0
        env:
          POSTGRES_PASSWORD: onadata
          POSTGRES_DB: onadata
          POSTGRES_USER: onadata
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "8"

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
          architecture: "x64"

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip
        uses: actions/cache@v2
        id: cache-pip
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/base.pip') }}

      - name: Install APT requirements
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libjpeg-dev zlib1g-dev software-properties-common ghostscript libxslt1-dev binutils libproj-dev gdal-bin memcached libmemcached-dev libxml2-dev libxslt-dev
          sudo rm -rf /var/lib/apt/lists/*

      - name: Install Pip requirements
        run: |
          pip install -U pip
          pip install -r requirements/base.pip
          pip install flake8
          pip install tblib
          pip install flaky
          pip install httmock
          pip install mock
          pip install requests-mock

      - name: Python Static Analysis
        env:
          DJANGO_SETTINGS_MODULE: onadata.settings.github_actions_test
        run: |
          pip install prospector==1.7.7 pylint==2.14.5
          pip install -r requirements/azure.pip
          prospector -X -s veryhigh onadata

      - name: Run tests
        run: |
          python manage.py test ${{ matrix.testfolder }} --noinput --settings=onadata.settings.github_actions_test --verbosity=2 --parallel=4

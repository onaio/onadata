name: AWS ECR Build Image

on:
  release:
      types:
          - "released"
  push:
    branches:
      - "master"
  workflow_dispatch:
      inputs:
          versionTag:
              description: "Version Tag"
              required: true
              default: ''

jobs:
  main:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get the version
        id: get-version
        if: github.event.inputs.versionTag == '' && github.event_name != 'push'
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Get the branch name
        id: get-branch-name
        if: github.event_name == 'push'
        run: echo "##[set-output name=BRANCH;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Setup SSH Agent and add Github to known hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh-agent.sock
        run: |
          ssh-agent -a  $SSH_AUTH_SOCK >> /dev/null
          ssh-add  - <<<  "${{ secrets.SSH_PRIVATE_KEY }}"
          mkdir -p ~/.ssh
          ssh-keyscan github.com > ~/.ssh/known_hosts

      - name: Build and push
        id: docker-build
        uses: docker/build-push-action@v2
        with:
          context: ./docker/onadata-uwsgi
          file: ./docker/onadata-uwsgi/Dockerfile
          platforms: linux/amd64
          ssh: |
            default=/tmp/ssh-agent.sock
          build-args: |
            release_version=${{ github.event.inputs.versionTag || steps.get-version.outputs.VERSION || steps.get-branch-name.outputs.BRANCH }}
            optional_packages=PyYAML django-redis ${{ secrets.ECR_OPTIONAL_PACKAGES }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/onaio/onadata:${{ github.event.inputs.versionTag || steps.get-version.outputs.VERSION || steps.get-branch-name.outputs.BRANCH }}

      - name: Image digest
        run: echo ${{ steps.docker-build.outputs.digest }}

# Generated by Django 4.2.13 on 2024-07-29 06:28

from django.db import migrations
from django.contrib.auth import get_user_model
from django.contrib.auth.models import Group
from django.contrib.auth.models import Permission
from django.contrib.contenttypes.models import ContentType

from guardian.shortcuts import assign_perm

from multidb.pinning import use_master


def add_project_entitylist_perm(apps, schema_editor):
    """Assign `add_project_entitylist` permission to existing Owners, Managers"""
    Project = apps.get_model("logger", "Project")
    content_type = ContentType.objects.get_for_model(Project)
    perm_codename = "add_project_entitylist"

    with use_master:
        _, created = Permission.objects.get_or_create(
            codename=perm_codename,
            content_type=content_type,
            defaults={
                "name": "Can add entitylist to project",
            },
        )

        if created:
            print(f"Permission {perm_codename} created because it does not exist")

        project_qs = Project.objects.filter(deleted_at__isnull=True)
        eta = project_qs.count()
        User = get_user_model()

        for project in project_qs.iterator(chunk_size=200):
            # Owners and Managers have the `add_project` permission
            project_user_obj_perm_qs = project.projectuserobjectpermission_set.filter(
                permission__codename="add_project"
            )
            project_group_obj_perm_qs = project.projectgroupobjectpermission_set.filter(
                permission__codename="add_project"
            )

            for user_obj_perm in project_user_obj_perm_qs.iterator(chunk_size=100):
                user = User.objects.get(id=user_obj_perm.user_id)
                assign_perm(perm_codename, user, project)

            for group_obj_perm in project_group_obj_perm_qs.iterator(chunk_size=100):
                group = Group.objects.get(id=group_obj_perm.group_id)
                assign_perm(perm_codename, group, project)

            eta -= 1
            print("eta", eta)


class Migration(migrations.Migration):

    dependencies = [
        ("logger", "0022_entity_logger_enti_deleted_66eee5_idx_and_more"),
    ]

    operations = [
        migrations.RunPython(
            add_project_entitylist_perm, reverse_code=migrations.RunPython.noop
        ),
    ]

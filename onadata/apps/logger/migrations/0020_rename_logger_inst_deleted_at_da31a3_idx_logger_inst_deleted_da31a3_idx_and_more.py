# Generated by Django 4.2.13 on 2024-07-04 11:26

from django.db import migrations, models, connection
import onadata.apps.logger.models.instance


def rename_index_if_exists(apps, schema_editor, old_name, new_name, table_name):
    with connection.cursor() as cursor:
        # Check if the index exists
        cursor.execute(
            """
            SELECT COUNT(1)
            FROM pg_indexes
            WHERE indexname = %s AND tablename = %s
        """,
            [old_name, table_name],
        )
        exists = cursor.fetchone()[0]

        if exists:
            cursor.execute(f"ALTER INDEX {old_name} RENAME TO {new_name}")


def rename_indexes(apps, schema_editor):
    rename_index_if_exists(
        apps,
        schema_editor,
        "logger_inst_deleted_at_da31a3_idx",
        "logger_inst_deleted_da31a3_idx",
        "logger_instance",
    )
    rename_index_if_exists(
        apps,
        schema_editor,
        "logger_instance_id_xform_id_index",
        "logger_inst_xform_i_504638_idx",
        "logger_instance",
    )
    rename_index_if_exists(
        apps,
        schema_editor,
        "logger_inst_hist_checksum_05f7bf_idx",
        "logger_inst_checksu_05f7bf_idx",
        "logger_instancehistory",
    )
    rename_index_if_exists(
        apps,
        schema_editor,
        "logger_inst_hist_uuid_f5ae42_idx",
        "logger_inst_uuid_f5ae42_idx",
        "logger_instancehistory",
    )


class Migration(migrations.Migration):

    dependencies = [
        ("logger", "0019_alter_project_options_and_more"),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunPython(
                    rename_indexes, reverse_code=migrations.RunPython.noop
                ),
            ],
            state_operations=[
                migrations.RenameIndex(
                    model_name="instance",
                    new_name="logger_inst_deleted_da31a3_idx",
                    old_name="logger_inst_deleted_at_da31a3_idx",
                ),
                migrations.RenameIndex(
                    model_name="instance",
                    new_name="logger_inst_xform_i_504638_idx",
                    old_name="logger_instance_id_xform_id_index",
                ),
                migrations.RenameIndex(
                    model_name="instancehistory",
                    new_name="logger_inst_checksu_05f7bf_idx",
                    old_name="logger_inst_hist_checksum_05f7bf_idx",
                ),
                migrations.RenameIndex(
                    model_name="instancehistory",
                    new_name="logger_inst_uuid_f5ae42_idx",
                    old_name="logger_inst_hist_uuid_f5ae42_idx",
                ),
            ],
        ),
        migrations.AlterField(
            model_name="instance",
            name="date_created",
            field=models.DateTimeField(
                blank=True,
                default=onadata.apps.logger.models.instance.now,
                editable=False,
            ),
        ),
        migrations.AlterField(
            model_name="instance",
            name="date_modified",
            field=models.DateTimeField(
                blank=True,
                default=onadata.apps.logger.models.instance.now,
                editable=False,
            ),
        ),
        migrations.AlterField(
            model_name="instancehistory",
            name="checksum",
            field=models.CharField(blank=True, db_index=True, max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name="instancehistory",
            name="uuid",
            field=models.CharField(db_index=True, default="", max_length=249),
        ),
    ]
